def print_board(board):
    print("\n")
    print("  1 2 3")
    for idx, row in enumerate(board):
        print(f"{idx+1} {' '.join(row)}")
    print("\n")


def check_winner(board, mark):
    # Check rows and columns
    for i in range(3):
        if all([cell == mark for cell in board[i]]):
            return True
        if all([board[j][i] == mark for j in range(3)]):
            return True

    # Check diagonals
    if all([board[i][i] == mark for i in range(3)]):
        return True
    if all([board[i][2 - i] == mark for i in range(3)]):
        return True

    return False


def board_full(board):
    return all([cell != ' ' for row in board for cell in row])


def main():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = "X"

    print("Tic Tac Toe Game!")
    print_board(board)

    while True:
        print(f"Player {current_player}'s turn.")
        try:
            row = int(input("Enter row (1-3): ")) - 1
            col = int(input("Enter col (1-3): ")) - 1
        except ValueError:
            print("Invalid input! Please enter numbers between 1 and 3.")
            continue

        if row not in range(3) or col not in range(3):
            print("Invalid move! Position out of bounds.")
            continue
        if board[row][col] != ' ':
            print("Invalid move! Cell already taken.")
            continue

        board[row][col] = current_player
        print_board(board)

        if check_winner(board, current_player):
            print(f"Player {current_player} wins!")
            break
        if board_full(board):
            print("It's a tie!")
            break

        current_player = "O" if current_player == "X" else "X"


if __name__ == "__main__":
    main()
